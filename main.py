# –û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
import os
import discord
import keep_alive
import re
from discord.ext import commands

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ–Ω—Ç–æ–≤ (—Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π) –¥–ª—è –±–æ—Ç–∞
intents = discord.Intents.default()
intents.message_content = True
intents.voice_states = True
intents.members = True
intents.presences = True

# –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞
bot = commands.Bot(command_prefix='!', intents=intents)

# –•—Ä–∞–Ω–∏–ª–∏—â–µ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤
created_channels = {}

# ID –∫–∞–Ω–∞–ª–∞, –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω—É–∂–Ω–æ —É–¥–∞–ª—è—Ç—å —Å—Å—ã–ª–∫–∏
LINKS_FILTER_CHANNEL_ID = '1234567890123456789'  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ ID –≤–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞

# –†–µ–≥—É–ª—è—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è —Å—Å—ã–ª–æ–∫
URL_PATTERN = re.compile(r'https?://\S+|www\.\S+')
DISCORD_INVITE_PATTERN = re.compile(r'discord(?:\.gg|app\.com/invite|\.com/invite)/\S+')

@bot.event
async def on_message(message):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ—Ç –±–æ—Ç–∞ –∏ –≤ –Ω—É–∂–Ω–æ–º –∫–∞–Ω–∞–ª–µ
    if message.author.bot or str(message.channel.id) != LINKS_FILTER_CHANNEL_ID:
        # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –∫–æ–º–∞–Ω–¥
        await bot.process_commands(message)
        return
        
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å—Å—ã–ª–æ–∫
    has_url = URL_PATTERN.search(message.content)
    has_discord_invite = DISCORD_INVITE_PATTERN.search(message.content)
    
    if has_url or has_discord_invite:
        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        await message.delete()
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        await message.channel.send(
            f"{message.author.mention}, —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ —Å—Å—ã–ª–æ–∫ –≤ —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ –∑–∞–ø—Ä–µ—â–µ–Ω–æ!",
            delete_after=5  # –£–¥–∞–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        )
    else:
        # –ï—Å–ª–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –Ω–µ—Ç —Å—Å—ã–ª–æ–∫, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –∫–æ–º–∞–Ω–¥
        await bot.process_commands(message)

@bot.event
async def on_ready():
    """–°–æ–±—ã—Ç–∏–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞"""
    print(f'–ë–æ—Ç {bot.user} —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!')

    # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã —Å Discord
    try:
        synced = await bot.tree.sync()
        print(f'–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ {len(synced)} –∫–æ–º–∞–Ω–¥')
    except Exception as e:
        print(f'–û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥: {e}')


@bot.event
async def on_voice_state_update(member, before, after):
    """–°–æ–±—ã—Ç–∏–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    # ID –∫–∞–Ω–∞–ª–∞-—Ç—Ä–∏–≥–≥–µ—Ä–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤
    TRIGGER_CHANNEL_ID = '1359162482215616742'  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ ID –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—à–µ–ª –≤ –∫–∞–Ω–∞–ª-—Ç—Ä–∏–≥–≥–µ—Ä
    if after.channel and str(after.channel.id) == TRIGGER_CHANNEL_ID:
        guild = member.guild

        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∫–∞–Ω–∞–ª
        channel = await guild.create_voice_channel(
            name=f'üîä {member.display_name}\'s –∫–∞–Ω–∞–ª',
            category=after.channel.category,
            overwrites={
                guild.default_role:
                discord.PermissionOverwrite(view_channel=False),
                member:
                discord.PermissionOverwrite(view_channel=True,
                                            connect=True,
                                            speak=True,
                                            stream=True,
                                            use_voice_activation=True,
                                            move_members=True,
                                            manage_channels=True)
            })

        # –ü–µ—Ä–µ–º–µ—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –Ω–æ–≤—ã–π –∫–∞–Ω–∞–ª
        await member.move_to(channel)

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–Ω–∞–ª–µ
        created_channels[channel.id] = {'owner': member.id, 'channel': channel}

        # –°–æ–∑–¥–∞–µ–º View —Å –∫–Ω–æ–ø–∫–∞–º–∏ –∏ –≤—ã–ø–∞–¥–∞—é—â–∏–º–∏ –º–µ–Ω—é
        view = PrivateChannelView(channel.id)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –∏ –≤—ã–ø–∞–¥–∞—é—â–∏–º–∏ —Å–ø–∏—Å–∫–∞–º–∏
        message = await channel.send('–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–º:', view=view)

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏—è
        created_channels[channel.id]['message_id'] = message.id

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–∫–∏–Ω—É–ª –∫–∞–Ω–∞–ª
    if before.channel and before.channel.id in created_channels:
        channel_data = created_channels[before.channel.id]
        channel = channel_data['channel']

        # –ï—Å–ª–∏ –∫–∞–Ω–∞–ª –ø—É—Å—Ç–æ–π, —É–¥–∞–ª—è–µ–º –µ–≥–æ
        if len(channel.members) == 0:
            await channel.delete()
            del created_channels[before.channel.id]


# –ö–ª–∞—Å—Å—ã View –¥–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
class PrivateChannelView(discord.ui.View):

    def __init__(self, channel_id):
        super().__init__(timeout=None)
        self.channel_id = channel_id

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –∏ –≤—ã–ø–∞–¥–∞—é—â–∏–µ –º–µ–Ω—é
        self.add_item(LockChannelButton())
        self.add_item(UnlockChannelButton())
        self.add_item(LimitButton())
        self.add_item(DeleteButton())
        self.add_item(RenameSelect())
        self.add_item(MemberActionSelect())


# –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
class LockChannelButton(discord.ui.Button):

    def __init__(self):
        super().__init__(style=discord.ButtonStyle.secondary,
                         label='–ó–∞–∫—Ä—ã—Ç—å –∫–∞–Ω–∞–ª',
                         custom_id='lock_channel')

    async def callback(self, interaction: discord.Interaction):
        channel_id = self.view.channel_id

        if channel_id not in created_channels:
            return await interaction.response.send_message('–ö–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!',
                                                           ephemeral=True)

        channel_data = created_channels[channel_id]

        if interaction.user.id != channel_data['owner']:
            return await interaction.response.send_message(
                '–¢–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü –∫–∞–Ω–∞–ª–∞ –º–æ–∂–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –∏–º!', ephemeral=True)

        channel = channel_data['channel']
        await channel.set_permissions(interaction.guild.default_role,
                                      view_channel=True,
                                      connect=False)
        await interaction.response.send_message(
            '–ö–∞–Ω–∞–ª –∑–∞–∫—Ä—ã—Ç! –¢–µ–ø–µ—Ä—å –Ω–∏–∫—Ç–æ –Ω–µ —Å–º–æ–∂–µ—Ç –≤ –Ω–µ–≥–æ –≤–æ–π—Ç–∏.',
            ephemeral=True)


class UnlockChannelButton(discord.ui.Button):

    def __init__(self):
        super().__init__(style=discord.ButtonStyle.success,
                         label='–û—Ç–∫—Ä—ã—Ç—å –∫–∞–Ω–∞–ª',
                         custom_id='unlock_channel')

    async def callback(self, interaction: discord.Interaction):
        channel_id = self.view.channel_id

        if channel_id not in created_channels:
            return await interaction.response.send_message('–ö–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!',
                                                           ephemeral=True)

        channel_data = created_channels[channel_id]

        if interaction.user.id != channel_data['owner']:
            return await interaction.response.send_message(
                '–¢–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü –∫–∞–Ω–∞–ª–∞ –º–æ–∂–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –∏–º!', ephemeral=True)

        channel = channel_data['channel']
        await channel.set_permissions(interaction.guild.default_role,
                                      view_channel=True,
                                      connect=True)
        await interaction.response.send_message(
            '–ö–∞–Ω–∞–ª –æ—Ç–∫—Ä—ã—Ç! –¢–µ–ø–µ—Ä—å –≤—Å–µ –º–æ–≥—É—Ç –≤–æ–π—Ç–∏.', ephemeral=True)


class LimitButton(discord.ui.Button):

    def __init__(self):
        super().__init__(style=discord.ButtonStyle.primary,
                         label='–õ–∏–º–∏—Ç',
                         custom_id='limit')

    async def callback(self, interaction: discord.Interaction):
        channel_id = self.view.channel_id

        if channel_id not in created_channels:
            return await interaction.response.send_message('–ö–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!',
                                                           ephemeral=True)

        channel_data = created_channels[channel_id]

        if interaction.user.id != channel_data['owner']:
            return await interaction.response.send_message(
                '–¢–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü –∫–∞–Ω–∞–ª–∞ –º–æ–∂–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –∏–º!', ephemeral=True)

        # –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –≤–≤–æ–¥–∞ –ª–∏–º–∏—Ç–∞
        modal = LimitModal(self.view.channel_id)
        await interaction.response.send_modal(modal)


class DeleteButton(discord.ui.Button):

    def __init__(self):
        super().__init__(style=discord.ButtonStyle.danger,
                         label='–£–¥–∞–ª–∏—Ç—å',
                         custom_id='delete')

    async def callback(self, interaction: discord.Interaction):
        channel_id = self.view.channel_id

        if channel_id not in created_channels:
            return await interaction.response.send_message('–ö–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!',
                                                           ephemeral=True)

        channel_data = created_channels[channel_id]

        if interaction.user.id != channel_data['owner']:
            return await interaction.response.send_message(
                '–¢–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü –∫–∞–Ω–∞–ª–∞ –º–æ–∂–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –∏–º!', ephemeral=True)

        channel = channel_data['channel']
        await channel.delete()
        del created_channels[channel_id]


# –í—ã–ø–∞–¥–∞—é—â–∏–µ –º–µ–Ω—é
class RenameSelect(discord.ui.Select):

    def __init__(self):
        options = [
            discord.SelectOption(label='–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ',
                                 value='default',
                                 description='–í–µ—Ä–Ω—É—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ'),
            discord.SelectOption(label='–ò–≥—Ä–æ–≤–æ–π',
                                 value='gaming',
                                 description='–ù–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –∏–≥—Ä'),
            discord.SelectOption(label='–ú—É–∑—ã–∫–∞–ª—å–Ω—ã–π',
                                 value='music',
                                 description='–ù–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –º—É–∑—ã–∫–∏'),
            discord.SelectOption(label='–°–≤–æ—ë –Ω–∞–∑–≤–∞–Ω–∏–µ',
                                 value='custom',
                                 description='–ó–∞–¥–∞—Ç—å —Å–≤–æ—ë –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª—É')
        ]
        super().__init__(placeholder='–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ',
                         min_values=1,
                         max_values=1,
                         options=options,
                         custom_id='rename')

    async def callback(self, interaction: discord.Interaction):
        channel_id = self.view.channel_id

        if channel_id not in created_channels:
            return await interaction.response.send_message('–ö–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!',
                                                           ephemeral=True)

        channel_data = created_channels[channel_id]

        if interaction.user.id != channel_data['owner']:
            return await interaction.response.send_message(
                '–¢–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü –∫–∞–Ω–∞–ª–∞ –º–æ–∂–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –∏–º!', ephemeral=True)

        channel = channel_data['channel']
        new_name_type = self.values[0]

        if new_name_type == 'custom':
            # –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –≤–≤–æ–¥–∞ —Å–≤–æ–µ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è
            modal = CustomNameModal(self.view.channel_id)
            await interaction.response.send_modal(modal)
        else:
            channel_name = ''
            if new_name_type == 'default':
                channel_name = f'üîä {interaction.user.display_name}\'s –∫–∞–Ω–∞–ª'
            elif new_name_type == 'gaming':
                channel_name = f'üéÆ {interaction.user.display_name}\'s –∏–≥—Ä–æ–≤–æ–π'
            elif new_name_type == 'music':
                channel_name = f'üéµ {interaction.user.display_name}\'s –º—É–∑—ã–∫–∞–ª—å–Ω—ã–π'

            await channel.edit(name=channel_name)
            await interaction.response.send_message(
                f'–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ "{channel_name}"!',
                ephemeral=True)


class MemberActionSelect(discord.ui.Select):

    def __init__(self):
        options = [
            discord.SelectOption(label='–ö–∏–∫–Ω—É—Ç—å –∏–≥—Ä–æ–∫–∞',
                                 value='kick',
                                 description='–í—ã–≥–Ω–∞—Ç—å –∏–≥—Ä–æ–∫–∞ –∏–∑ –∫–∞–Ω–∞–ª–∞'),
            discord.SelectOption(label='–ó–∞–±–∞–Ω–∏—Ç—å –∏–≥—Ä–æ–∫–∞',
                                 value='ban',
                                 description='–ó–∞–ø—Ä–µ—Ç–∏—Ç—å –∏–≥—Ä–æ–∫—É –≤—Ö–æ–¥ –≤ –∫–∞–Ω–∞–ª')
        ]
        super().__init__(placeholder='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏',
                         min_values=1,
                         max_values=1,
                         options=options,
                         custom_id='member_action')

    async def callback(self, interaction: discord.Interaction):
        channel_id = self.view.channel_id

        if channel_id not in created_channels:
            return await interaction.response.send_message('–ö–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!',
                                                           ephemeral=True)

        channel_data = created_channels[channel_id]

        if interaction.user.id != channel_data['owner']:
            return await interaction.response.send_message(
                '–¢–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü –∫–∞–Ω–∞–ª–∞ –º–æ–∂–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –∏–º!', ephemeral=True)

        channel = channel_data['channel']
        action = self.values[0]

        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∫–∞–Ω–∞–ª–∞ (–∫—Ä–æ–º–µ –≤–ª–∞–¥–µ–ª—å—Ü–∞)
        members = [m for m in channel.members if m.id != channel_data['owner']]

        if not members:
            return await interaction.response.send_message(
                '–í –∫–∞–Ω–∞–ª–µ –Ω–µ—Ç –¥—Ä—É–≥–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤!', ephemeral=True)

        # –°–æ–∑–¥–∞–µ–º –≤—ã–ø–∞–¥–∞—é—â–µ–µ –º–µ–Ω—é –¥–ª—è –≤—ã–±–æ—Ä–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∞
        view = discord.ui.View()
        select = MemberSelect(members, action, channel_id)
        view.add_item(select)

        await interaction.response.send_message(
            '–í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä–æ–∫–∞ –¥–ª—è ' +
            ('–∫–∏–∫–∞:' if action == 'kick' else '–±–∞–Ω–∞:'),
            view=view,
            ephemeral=True)


class MemberSelect(discord.ui.Select):

    def __init__(self, members, action, channel_id):
        self.action = action
        self.channel_id = channel_id

        options = []
        for member in members:
            options.append(
                discord.SelectOption(label=member.display_name,
                                     value=f"{action}_{member.id}",
                                     description=str(member)))

        super().__init__(placeholder='–í—ã–±–µ—Ä–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞',
                         min_values=1,
                         max_values=1,
                         options=options,
                         custom_id='member_select')

    async def callback(self, interaction: discord.Interaction):
        if self.channel_id not in created_channels:
            return await interaction.response.send_message('–ö–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!',
                                                           ephemeral=True)

        channel_data = created_channels[self.channel_id]

        if interaction.user.id != channel_data['owner']:
            return await interaction.response.send_message(
                '–¢–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü –∫–∞–Ω–∞–ª–∞ –º–æ–∂–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –∏–º!', ephemeral=True)

        channel = channel_data['channel']
        action, user_id = self.values[0].split('_')
        member = interaction.guild.get_member(int(user_id))

        if not member:
            return await interaction.response.send_message(
                '–£—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!', ephemeral=True)

        if action == 'kick':
            if member.voice and member.voice.channel and member.voice.channel.id == channel.id:
                await member.move_to(None)
            await interaction.response.send_message(
                f'{member.display_name} –∫–∏–∫–Ω—É—Ç –∏–∑ –∫–∞–Ω–∞–ª–∞!', ephemeral=True)
        elif action == 'ban':
            await channel.set_permissions(member,
                                          view_channel=False,
                                          connect=False)
            if member.voice and member.voice.channel and member.voice.channel.id == channel.id:
                await member.move_to(None)
            await interaction.response.send_message(
                f'{member.display_name} –∑–∞–±–∞–Ω–µ–Ω –≤ –∫–∞–Ω–∞–ª–µ!', ephemeral=True)


# –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞
class CustomNameModal(discord.ui.Modal, title='–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞'):

    def __init__(self, channel_id):
        super().__init__()
        self.channel_id = channel_id

    channel_name = discord.ui.TextInput(
        label='–ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ',
        placeholder='–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞',
        min_length=1,
        max_length=30,
        required=True)

    async def on_submit(self, interaction: discord.Interaction):
        if self.channel_id not in created_channels:
            return await interaction.response.send_message('–ö–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!',
                                                           ephemeral=True)

        channel_data = created_channels[self.channel_id]

        if interaction.user.id != channel_data['owner']:
            return await interaction.response.send_message(
                '–¢–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü –∫–∞–Ω–∞–ª–∞ –º–æ–∂–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –∏–º!', ephemeral=True)

        channel = channel_data['channel']
        await channel.edit(name=self.channel_name.value)
        await interaction.response.send_message(
            f'–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ "{self.channel_name.value}"!',
            ephemeral=True)


class LimitModal(discord.ui.Modal, title='–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ª–∏–º–∏—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤'):

    def __init__(self, channel_id):
        super().__init__()
        self.channel_id = channel_id

    limit = discord.ui.TextInput(label='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤',
                                 placeholder='–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 99',
                                 min_length=1,
                                 max_length=2,
                                 required=True)

    async def on_submit(self, interaction: discord.Interaction):
        if self.channel_id not in created_channels:
            return await interaction.response.send_message('–ö–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!',
                                                           ephemeral=True)

        channel_data = created_channels[self.channel_id]

        if interaction.user.id != channel_data['owner']:
            return await interaction.response.send_message(
                '–¢–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü –∫–∞–Ω–∞–ª–∞ –º–æ–∂–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –∏–º!', ephemeral=True)

        channel = channel_data['channel']

        try:
            limit = int(self.limit.value)
            if limit < 1 or limit > 99:
                return await interaction.response.send_message(
                    '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 99!', ephemeral=True)

            await channel.edit(user_limit=limit)
            await interaction.response.send_message(
                f'–õ–∏–º–∏—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {limit}', ephemeral=True)
        except ValueError:
            await interaction.response.send_message(
                '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 99!', ephemeral=True)


# –ó–∞–ø—É—Å–∫–∞–µ–º –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞
@bot.event
async def on_ready():
    """–°–æ–±—ã—Ç–∏–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞"""
    print(f'–ë–æ—Ç {bot.user} —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!')

    # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã —Å Discord
    try:
        synced = await bot.tree.sync()
        print(f'–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ {len(synced)} –∫–æ–º–∞–Ω–¥')
    except Exception as e:
        print(f'–û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥: {e}')


keep_alive.keep_alive()
bot.run(os.environ["Token"])

# –ó–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–æ, —Ç–∞–∫ –∫–∞–∫, –ø–æ—Ö–æ–∂–µ, —ç—Ç–æ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å –Ω–µ–≤–µ—Ä–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º
# bot.run(os.getenv('1359162482215616742'))
